- What happens when you initialize a repository? Why do you need to do it?
  A hidden .git directory is created, which stores the history of all files in the repository. Doing it is necessary to start tracking files.

- How is the staging area different from the working directory and the respository? What value do you think it offers?

  Only files in the staging area can be added to the repository. Files in the staging area are not currently tracked, while files in the repository are. The staging area lets logically related files be grouped together when adding new files, instead of having to add all new files.

- How can you use the stagin area to make sure you have one commit per logical change?

 Stage a file by itself and commit it, and then repeat for every modified file.

- What are some situations when branches would be helpful in keeping your history organized? How would branches help? 

 When working on a different branch than master, all commits would be related to the feature the branch was made for, and there will be less commits in the master branch, which would reduce the commits you would need to look through if you were looking for a change that was not related to that feature. By switching branches, you could more quickly find a certain commit for a feature.

- How do the diagrams help you visualize the branch structure?

 Diagrams show the history of commits to different branches, and show when each branch was made, as well as when it may have been merged back to another branch.It also shows which commits are reachable from a certain branch, and which are not.
